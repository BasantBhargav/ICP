class Solution {
    int[][] dp;
    public int helper(int cr, int cc, int er, int ec) {
        if (cr == er && cc == ec) return 1;
        if (cr > er || cc > ec) return 0;
        if (dp[cr][cc] != -1) return dp[cr][cc];
        int down = helper(cr + 1, cc, er, ec);
        int right = helper(cr, cc + 1, er, ec);
        return dp[cr][cc] = down + right;
    }
    public int uniquePaths(int m, int n) {
        dp = new int[m][n];
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                dp[i][j] = -1;
            }
        }
        return helper(0, 0, m - 1, n - 1);
    }
}
